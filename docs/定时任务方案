                                  定时任务方案
一、概述
    在引入XXL-JOB分布式调度系统中收集到的方案描述
	作业系统Quartz
	现在系统用的定时任务就是Quartz单机实现，单节点问题：如果这单独的节点失效了，整个节点上执行的所有任务也就都失败了。。。
	XXL-JOB是基于Quartz集群实现，Quartz的集群功能通过故障转移和负载平衡功能为调度程序带来了高可用性和可扩展性。
	这里描述了XXL-JOB的架构设计http://www.xuxueli.com/xxl-job/#/?id=_53-%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1
	将调度行为抽象形成“调度中心”公共平台，而平台自身并不承担业务逻辑，“调度中心”负责发起调度请求。将任务抽象成分散的JobHandler，交由“执行器”统一管理，“执行器”负责接收调度请求并执行对应的JobHandler中业务逻辑。
	（调度中心）->（执行器）

二、具体方案

	1.XXL-JOB 放到系统集群外部，通过调用（网关服务） 来调用实际的 （业务逻辑）

		实现：
			1. 需提供统一接口 （任务接口服务）
			2. 因为每类任务的入口统一了，为了区分不同类型的任务，就需要对每个任务做类型判断 和 回调服务

		流程：
			1.（调度中心）->（执行器）--不同系统集群-->（网关服务）->（任务接口服务）->（业务逻辑）
			2.（调度中心）->（执行器）--不同系统集群-->（网关服务）->（任务接口服务 业务逻辑）


		适合场景：
			动态修改任务
			统一入口
			对多个系统集群做统一管理

    2.XXL-JOB 放到系统集群内，通过服务发现来调用（业务逻辑）
		实现：
			1.restTemplate直接请求
			2.如果 （业务逻辑）同时也是 （执行器）就直接使用注解就可以了

		流程：
			1.（调度中心）->（执行器）->（业务逻辑）
			2.（调度中心）->（执行器 业务逻辑）


		适合场景：
			动态修改任务
		    没开发量
			只能单集群管理了

	3.Quartz原生集群http://www.quartz-scheduler.org/documentation/quartz-2.x/configuration/ConfigJDBCJobStoreClustering.html

		实现：
			1.加个数据库 配置一下

		流程：
			1.（业务逻辑）

		适合场景：
			不需要动态修改 管理 任务
			没开发量
			没有引用外部服务

    4.其他
		Elastic-Job 。。。

